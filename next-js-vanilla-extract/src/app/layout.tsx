import { ColorModeProvider, ColorModeToggle } from "@/components/ThemeToggle";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./style.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ColorModeProvider>
      <html lang="en" suppressHydrationWarning>
        <body className={`${geistSans.variable} ${geistMono.variable}`}>
          <script
            dangerouslySetInnerHTML={{
              __html: `
              const localTheme = window.localStorage.getItem('vanilla-theme-pref');
              if (localTheme === 'dark') {
                document.documentElement.classList.add('dark');
              }
            `,
            }}
          />
          <ColorModeToggle />
          {children}
        </body>
      </html>
    </ColorModeProvider>
  );
}
